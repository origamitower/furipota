%furipota/1
import core "prelude"

define f1 x = x
define f2 x y = x - y
define f3 f x = f x

define currying = [
  assert (f1 1 === 1)           @ -message: "f1 1 = 1",
  assert ((f2 2) 1 === 1)       @ -message: "(f2 2) 1 = 1",
  assert ((f3 f1 1) === 1)      @ -message: "f3 f1 1 = 1",
  # assert ((f2 _ 1) 2 === 1)     @ -message: "(f2 _ 1) 2 = 1"    see #10
  assert-type "Lambda" (f2 _ 1) @ -message: "f2 _ 1 is a lambda"
]



define g1 a @ options = 
  match Record.get options "b" with
    case ^Ok x       then a + x
    case ^Error any  then a


define options = [
  assert ((g1 1 @ -b: 2) === 3)  @ -message: "g1 1 @ -b: 2 = 3",
  assert ((g1 1) === 1)          @ -message: "g1 1 = 1"
]


define check v = Vector.count v

define main = do
  call Terminal.display-line "-- Currying in function calls"
  call Terminal.display-line ": OK {check currying} tests"
  call Terminal.display-line "-- Options in function calls"
  call Terminal.display-line ": OK {check options} tests"

%furipota/1

import core "prelude"

# -- CONSTANTS
define js-sources    = find (path "source/**/*.js")
define ometa-sources = find (path "source/**/*.ometajs")
define project-root  = Path.directory self.path


# -- HELPERS
define discard stream = stream |> (x -> Stream.empty)

define npm-bin name = Stream.take 1 (find-upwards project-root (path "node_modules/.bin" / name))

define to-js x = Path.change-extension ".js" x

define ometa path @options =
  npm-bin "ometajs2js"
    |> (ometajs -> sequential [
         $(ometajs '--input path '--output options.output),
         Stream.of (from: path  to: options.output)
       ])

define parents path =
  if Path.is-root path then
    Stream.of path
  else
    Stream.concatenate [Stream.of path, (parents (Path.directory path))]

define find-upwards from pattern =
  parents from
    |> (base -> find pattern base-directory: base  return-absolute-paths: true)


define build-to build-dir =
  let    target dest   = build-dir / Path.relative (path "source") to: dest
  in let show prefix x = 
           Debug.log (Vector.join " " [Path.to-text x.from, "->", Path.to-text x.to]) prefix: prefix
  in let show-copy x  = Stream.of (show "COPY" x)
  in let show-ometa x = Stream.of (show "OMETA" x)
  in 
  sequential [
    make-directory build-dir | Debug.trace prefix: "MKDIR",
    parallel [
      js-sources 
        |> (x -> copy x to: (target x))
        |> show-copy,

      ometa-sources
        |> (x -> sequential [
             discard (make-directory (Path.directory (target x)) | Debug.trace prefix: "MKDIR"),
             ometa x output: (to-js (target x))
           ])
        |> show-ometa
    ]
  ]


# --[ Tasks ]----------------------------------------------------------
export define snapshot =
  # Creates a snapshot of the Furipota VM. This is used for bootstrapping.
  build-to (path ".snapshot")

export define build =
  # Builds the Furipota VM
  build-to (path "furipota")

export define test =
  # Runs the tests for Furipota VM
  let run test = do [
    Debug.log (Path.to-text (Path.directory test)) prefix: "TEST",
    Terminal.show $('node test)
  ]
  in find (path "tests/**/run.js") |> run _

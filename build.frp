%furipota/1

import core "prelude"

# --[ Constants and stuff ]--------------------------------------------
define js-sources    = find (path "source/**/*.js")
define ometa-sources = find (path "source/**/*.ometajs")
define project-root  = Path.directory self.path

define npm-bin name = take 1 (find-upwards project-root (path "node_modules/.bin" / name))


# --[ Helpers ]--------------------------------------------------------
define to-js x = Path.change-extension ".js" x

define ometa path @options =
  npm-bin "ometajs2js"
    |> (ometajs -> sequential [
         $(ometajs.path '--input path '--output options.output),
         from-vector [from: path to: options.output]
       ])

define parents path =
  if Path.is-root path then
    [path]
  else
    Vector.concat [path] (parents (Path.directory path))

define find-upwards from pattern =
  from-vector (parents from)
    |> (base -> find pattern base-directory: base return-absolute-paths: true)

define build-to build-dir =
  let    target dest = build-dir / Path.relative (path "source") to: dest
  in let show prefix x = 
       display-line (join " " [
         Terminal.blue prefix,
         Path.to-text x.from, "->", Path.to-text x.to
       ])
  in let show-copy = show "COPY"
  in let show-ometa = show "OMETA"
  in
  sequential [
    make-directory build-dir | trace prefix: "MKDIR",
    parallel [
      js-sources
        |> (x -> copy x.path to: (target x.path) `map show-copy),
      ometa-sources
        |> (x -> ometa x.path output: (to-js (target x.path)) `map show-ometa)
    ]
  ]


# --[ Tasks ]----------------------------------------------------------
export define snapshot =
  # Creates a snapshot of the Furipota VM. This is used for bootstrapping.
  build-to (path ".snapshot")

export define build =
  # Builds the Furipota VM
  build-to (path "furipota")

export define test =
  # Runs the tests for Furipota VM
  let run test = do [
    display-line (join " " [
      Terminal.blue "TEST",
      Terminal.green (Path.to-text (Path.directory test.path))
    ]),
    $('node test.path) | show
  ]
  in find (path "tests/**/run.js")
     |> run _
